var search_data = {"index":{"longSearchIndex":["blackjackgame","card","dealer","dealerhand","deck","gameio","hand","player","playerhand","shoe","hand#add_card()","dealer#add_card_to_hand()","player#add_card_to_hand()","player#add_card_to_split_hand()","player#add_money()","blackjackgame#all_play()","blackjackgame#are_active_players()","dealer#clear_hand()","dealerhand#clear_hand()","player#clear_hand()","playerhand#clear_hand()","blackjackgame#clear_hands()","blackjackgame#compare_hands()","blackjackgame#compare_split_hand()","blackjackgame#deal_cards()","blackjackgame#dealers_play()","player#double_bet()","player#double_split_bet()","blackjackgame#evaluate_all_hands()","deck#get_cards()","gameio#get_command()","player#get_current_bet()","player#get_double_down()","playerhand#get_double_down()","dealer#get_hand()","player#get_hand()","hand#get_hand_cards()","dealer#get_points()","hand#get_points()","player#get_points()","player#get_split()","playerhand#get_split()","player#get_split_bet()","player#get_split_double_down()","player#get_split_hand()","player#get_split_points()","blackjackgame#hit()","blackjackgame#hit_split_hand()","gameio#input_bet_value()","gameio#input_player_count()","gameio#input_shoe_size()","player#is_bankrupt()","dealer#is_blackjack()","hand#is_blackjack()","player#is_blackjack()","hand#is_bust()","dealer#is_busted()","player#is_busted()","player#is_split_blackjack()","player#is_split_busted()","player#make_bet()","blackjackgame::new()","card::new()","dealer::new()","deck::new()","gameio::new()","hand::new()","player::new()","shoe::new()","blackjackgame#pay_player()","blackjackgame#play()","blackjackgame#play_split()","blackjackgame#players_place_bets()","hand#pop_card()","gameio#print_all_hands()","gameio#print_all_players()","gameio#print_blackjack_msg()","gameio#print_busted_msg()","gameio#print_deal_cards()","gameio#print_dealers_hand()","gameio#print_end()","gameio#print_end_round()","gameio#print_hand()","gameio#print_instructions()","gameio#print_msg()","gameio#print_player()","gameio#print_player_bankrupt()","gameio#print_separator()","gameio#print_separator_strong()","shoe#print_shoe()","gameio#print_split_hand()","gameio#print_split_separator_1()","gameio#print_split_separator_2()","gameio#print_split_vs_msg()","gameio#print_start_round()","gameio#print_vs_msg()","blackjackgame#remove_bankrupt_players()","shoe#reset()","shoe#retrieve_card()","blackjackgame#setup_game()","blackjackgame#split()","blackjackgame#start_round()","hand#update_points()"],"info":[["BlackjackGame","","BlackjackGame.html","","<p>The BlackjackGame class is responsible for the high level game logic.\n"],["Card","","Card.html","","<p>This class represents a card\n"],["Dealer","","Dealer.html","","<p>Dealer class\n"],["DealerHand","","DealerHand.html","","<p>The DealerHand class inherits from the Hand class\n"],["Deck","","Deck.html","","<p>A Deck is made up of all the 52 cards\n"],["GameIO","","GameIO.html","","<p>The GameIO class. This class is responsible for the input/output operations\nof the game.\n"],["Hand","","Hand.html","","<p>Hand class represents a hand which is made up of cards and the points\n"],["Player","","Player.html","","<p>Player class represents a player. Note that Dealer and Player are separate\nclasses\n"],["PlayerHand","","PlayerHand.html","","<p>The PlayerHand class inherits from the Hand class\n"],["Shoe","","Shoe.html","","<p>The Shoe class. A shoe is made up of multiple decks and then shuffled.\n"],["add_card","Hand","Hand.html#method-i-add_card","(card)","<p>Add a card to the hand\n"],["add_card_to_hand","Dealer","Dealer.html#method-i-add_card_to_hand","(card)","<p>Add a card to the dealer’s hand\n"],["add_card_to_hand","Player","Player.html#method-i-add_card_to_hand","(card)","<p>Add a card to the hand\n"],["add_card_to_split_hand","Player","Player.html#method-i-add_card_to_split_hand","(card)","<p>Add a card to the second hand of the split\n"],["add_money","Player","Player.html#method-i-add_money","(amount)","<p>Add the given amount to the players money\n"],["all_play","BlackjackGame","BlackjackGame.html#method-i-all_play","()","<p>Iterates through all the players, executing their plays\n"],["are_active_players","BlackjackGame","BlackjackGame.html#method-i-are_active_players","()","<p>Returns true if there is even a single player who is not bankrupt, false\notherwise\n"],["clear_hand","Dealer","Dealer.html#method-i-clear_hand","()","<p>Clear the dealer’s hand\n"],["clear_hand","DealerHand","DealerHand.html#method-i-clear_hand","()","<p>Clear the cards in the dealer’s hand\n"],["clear_hand","Player","Player.html#method-i-clear_hand","()","<p>Clear the hand\n"],["clear_hand","PlayerHand","PlayerHand.html#method-i-clear_hand","()","<p>Clear all card from the hand, reset the points\n"],["clear_hands","BlackjackGame","BlackjackGame.html#method-i-clear_hands","()","<p>Clear the hands of all players and th dealer\n"],["compare_hands","BlackjackGame","BlackjackGame.html#method-i-compare_hands","(player)","<p>Compares the hand of the player with that of the dealer\n"],["compare_split_hand","BlackjackGame","BlackjackGame.html#method-i-compare_split_hand","(player)","<p>Compare player’s second hand with that of the dealer, in case of a split\n"],["deal_cards","BlackjackGame","BlackjackGame.html#method-i-deal_cards","()","<p>Deal the cards to all players and the dealer\n"],["dealers_play","BlackjackGame","BlackjackGame.html#method-i-dealers_play","()","<p>Dealer plays once all players have completed their plays\n"],["double_bet","Player","Player.html#method-i-double_bet","()","<p>Double the value of the bet\n"],["double_split_bet","Player","Player.html#method-i-double_split_bet","()","<p>Double the value of bet on the second hand of the split\n"],["evaluate_all_hands","BlackjackGame","BlackjackGame.html#method-i-evaluate_all_hands","()","<p>Compare hands of all players with the dealer\n"],["get_cards","Deck","Deck.html#method-i-get_cards","()","<p>Return all the cards of the deck\n"],["get_command","GameIO","GameIO.html#method-i-get_command","(can_double_down, can_split)","<p>Get the action commands from the input. The parameters describe if\ndouble-down and splitting are valid. …\n"],["get_current_bet","Player","Player.html#method-i-get_current_bet","()","<p>Get the value of current bet\n"],["get_double_down","Player","Player.html#method-i-get_double_down","()","<p>Return true if player can double down\n"],["get_double_down","PlayerHand","PlayerHand.html#method-i-get_double_down","()","<p>Return true if a player has two cards\n"],["get_hand","Dealer","Dealer.html#method-i-get_hand","()","<p>Return the dealer’s hand\n"],["get_hand","Player","Player.html#method-i-get_hand","()","<p>Returns the hand\n"],["get_hand_cards","Hand","Hand.html#method-i-get_hand_cards","()","<p>Return all the cards in the hand\n"],["get_points","Dealer","Dealer.html#method-i-get_points","()","<p>Return the points of the hand\n"],["get_points","Hand","Hand.html#method-i-get_points","()","<p>Return total points of the hand\n"],["get_points","Player","Player.html#method-i-get_points","()","<p>Return the points of the hand\n"],["get_split","Player","Player.html#method-i-get_split","()","<p>Return true if player can split the hand\n"],["get_split","PlayerHand","PlayerHand.html#method-i-get_split","()","<p>Return true if both the card have the same type\n"],["get_split_bet","Player","Player.html#method-i-get_split_bet","()","<p>Get the value of the bet on the second hand of the split\n"],["get_split_double_down","Player","Player.html#method-i-get_split_double_down","()","<p>Return true if player can double down on second hand of the split\n"],["get_split_hand","Player","Player.html#method-i-get_split_hand","()","<p>Returns the second hand of the split\n"],["get_split_points","Player","Player.html#method-i-get_split_points","()","<p>Return points of the second hand of the split\n"],["hit","BlackjackGame","BlackjackGame.html#method-i-hit","(player)","<p>Executed when player calls a hit\n"],["hit_split_hand","BlackjackGame","BlackjackGame.html#method-i-hit_split_hand","(player)","<p>Executed when th player calls a hit on the second hand of a split\n"],["input_bet_value","GameIO","GameIO.html#method-i-input_bet_value","()","<p>Get the bet value from the input\n"],["input_player_count","GameIO","GameIO.html#method-i-input_player_count","()","<p>Get the player count from the input\n"],["input_shoe_size","GameIO","GameIO.html#method-i-input_shoe_size","()","<p>Get the number of decks from the input, currently not in use\n"],["is_bankrupt","Player","Player.html#method-i-is_bankrupt","()","<p>Return true when player is bankrupt\n"],["is_blackjack","Dealer","Dealer.html#method-i-is_blackjack","()","<p>Return true if the dealer has a blackjack\n"],["is_blackjack","Hand","Hand.html#method-i-is_blackjack","()","<p>Return true if the hand is a blackjack\n"],["is_blackjack","Player","Player.html#method-i-is_blackjack","()","<p>Return true if the hand is a blackjack\n"],["is_bust","Hand","Hand.html#method-i-is_bust","()","<p>Return true if the hand is a bust\n"],["is_busted","Dealer","Dealer.html#method-i-is_busted","()","<p>Returns true if dealer’s hand is a bust\n"],["is_busted","Player","Player.html#method-i-is_busted","()","<p>Return true if the hand is a bust\n"],["is_split_blackjack","Player","Player.html#method-i-is_split_blackjack","()","<p>Return true if second hand of the split is a blackjack\n"],["is_split_busted","Player","Player.html#method-i-is_split_busted","()","<p>Return true if second hand of the split is a bust\n"],["make_bet","Player","Player.html#method-i-make_bet","(bet_value)","<p>Make a bet of the given value\n"],["new","BlackjackGame","BlackjackGame.html#method-c-new","()","<p>Initialize a new BlackJack game\n"],["new","Card","Card.html#method-c-new","(symbol, value, suit)","<p>Initialize a card with the given symbol, value and suit\n"],["new","Dealer","Dealer.html#method-c-new","()","<p>Initialize dealer with an empty hand\n"],["new","Deck","Deck.html#method-c-new","()","<p>Initialize a deck of cards\n"],["new","GameIO","GameIO.html#method-c-new","()","<p>Initialize the GameIO class\n"],["new","Hand","Hand.html#method-c-new","()","<p>Initialize an empty hand\n"],["new","Player","Player.html#method-c-new","()","<p>Initialize a player with an empty hand\n"],["new","Shoe","Shoe.html#method-c-new","(size)","<p>Initialize a shoe with the size number of decks\n"],["pay_player","BlackjackGame","BlackjackGame.html#method-i-pay_player","(player, amount)","<p>Pay the player\n"],["play","BlackjackGame","BlackjackGame.html#method-i-play","(player)","<p>Player plays the hand according this method\n"],["play_split","BlackjackGame","BlackjackGame.html#method-i-play_split","(player)","<p>Play the second hand of the split\n"],["players_place_bets","BlackjackGame","BlackjackGame.html#method-i-players_place_bets","()","<p>Players place their respective bets\n"],["pop_card","Hand","Hand.html#method-i-pop_card","()","<p>Remove the last card from the hand and return it.  Used for the split\naction.\n"],["print_all_hands","GameIO","GameIO.html#method-i-print_all_hands","(players)","<p>Print hands of all the players\n"],["print_all_players","GameIO","GameIO.html#method-i-print_all_players","(players)","<p>Print details of all players\n"],["print_blackjack_msg","GameIO","GameIO.html#method-i-print_blackjack_msg","(player)","<p>Print when player has a blackjack\n"],["print_busted_msg","GameIO","GameIO.html#method-i-print_busted_msg","(player)","<p>Print when player busts\n"],["print_deal_cards","GameIO","GameIO.html#method-i-print_deal_cards","()","<p>Print when dealing cards\n"],["print_dealers_hand","GameIO","GameIO.html#method-i-print_dealers_hand","(dealer)","<p>Print the dealer’s hand\n"],["print_end","GameIO","GameIO.html#method-i-print_end","()","<p>Print at end of game\n"],["print_end_round","GameIO","GameIO.html#method-i-print_end_round","()","<p>Print at end of round\n"],["print_hand","GameIO","GameIO.html#method-i-print_hand","(player)","<p>Print the hand of the player\n"],["print_instructions","GameIO","GameIO.html#method-i-print_instructions","()","<p>Print game instructions\n"],["print_msg","GameIO","GameIO.html#method-i-print_msg","(message_id)","<p>Prints the message based on id given\n"],["print_player","GameIO","GameIO.html#method-i-print_player","(player)","<p>Print details of a player\n"],["print_player_bankrupt","GameIO","GameIO.html#method-i-print_player_bankrupt","(player)","<p>Print when a player becomes bankrupt\n"],["print_separator","GameIO","GameIO.html#method-i-print_separator","()","<p>Horizontal separator\n"],["print_separator_strong","GameIO","GameIO.html#method-i-print_separator_strong","()","<p>Horizontal separator, strong\n"],["print_shoe","Shoe","Shoe.html#method-i-print_shoe","()","<p>Print all the cards in the shoe\n"],["print_split_hand","GameIO","GameIO.html#method-i-print_split_hand","(player)","<p>Print the second had of the player\n"],["print_split_separator_1","GameIO","GameIO.html#method-i-print_split_separator_1","()","<p>For player’s first hand when a split is called\n"],["print_split_separator_2","GameIO","GameIO.html#method-i-print_split_separator_2","()","<p>For player’s second hand when a split is called\n"],["print_split_vs_msg","GameIO","GameIO.html#method-i-print_split_vs_msg","(player, dealer)","<p>Print a message comparing the second hand of the player and the dealer\n"],["print_start_round","GameIO","GameIO.html#method-i-print_start_round","()","<p>Print at start of round\n"],["print_vs_msg","GameIO","GameIO.html#method-i-print_vs_msg","(player, dealer)","<p>Print a message comparing hands of the player and the dealer\n"],["remove_bankrupt_players","BlackjackGame","BlackjackGame.html#method-i-remove_bankrupt_players","()","<p>Removes bankrupt players from the players array\n"],["reset","Shoe","Shoe.html#method-i-reset","()","<p>Reset the shoe\n"],["retrieve_card","Shoe","Shoe.html#method-i-retrieve_card","()","<p>Take a card out from the shoe and return it\n"],["setup_game","BlackjackGame","BlackjackGame.html#method-i-setup_game","()","<p>Initializes all players, dealer and a shoe\n"],["split","BlackjackGame","BlackjackGame.html#method-i-split","(player)","<p>Splits the player’s hand\n"],["start_round","BlackjackGame","BlackjackGame.html#method-i-start_round","()","<p>This method starts each round in a game.\n"],["update_points","Hand","Hand.html#method-i-update_points","()","<p>Update the value of total points\n"]],"searchIndex":["blackjackgame","card","dealer","dealerhand","deck","gameio","hand","player","playerhand","shoe","add_card()","add_card_to_hand()","add_card_to_hand()","add_card_to_split_hand()","add_money()","all_play()","are_active_players()","clear_hand()","clear_hand()","clear_hand()","clear_hand()","clear_hands()","compare_hands()","compare_split_hand()","deal_cards()","dealers_play()","double_bet()","double_split_bet()","evaluate_all_hands()","get_cards()","get_command()","get_current_bet()","get_double_down()","get_double_down()","get_hand()","get_hand()","get_hand_cards()","get_points()","get_points()","get_points()","get_split()","get_split()","get_split_bet()","get_split_double_down()","get_split_hand()","get_split_points()","hit()","hit_split_hand()","input_bet_value()","input_player_count()","input_shoe_size()","is_bankrupt()","is_blackjack()","is_blackjack()","is_blackjack()","is_bust()","is_busted()","is_busted()","is_split_blackjack()","is_split_busted()","make_bet()","new()","new()","new()","new()","new()","new()","new()","new()","pay_player()","play()","play_split()","players_place_bets()","pop_card()","print_all_hands()","print_all_players()","print_blackjack_msg()","print_busted_msg()","print_deal_cards()","print_dealers_hand()","print_end()","print_end_round()","print_hand()","print_instructions()","print_msg()","print_player()","print_player_bankrupt()","print_separator()","print_separator_strong()","print_shoe()","print_split_hand()","print_split_separator_1()","print_split_separator_2()","print_split_vs_msg()","print_start_round()","print_vs_msg()","remove_bankrupt_players()","reset()","retrieve_card()","setup_game()","split()","start_round()","update_points()"]}}